{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#descarga-del-repositorio","title":"Descarga del repositorio","text":"<p>Descarga la soluci\u00f3n del challenge que se encuentra en <code>https://github.com/elwuapo/challenge.git</code> y trabaja con la rama <code>main</code></p>"},{"location":"#solucion-en-local","title":"Soluci\u00f3n en local","text":"<p>Crea una un directorio virutal en la carpeta del proyecto con el siguiente comando:</p> WindowsMac &amp; Linux <pre><code>python -m venv .env\n</code></pre> <pre><code>python3 -m venv .env\n</code></pre> <p>Activa el entorno virtual</p> WindowsMac &amp; Linux <pre><code>.env/Scripts/activate\n</code></pre> <pre><code>source .env/bin/activate\n</code></pre> <p>Ahora vamos a instalar las librerias necesarias para que se ejecute el proyecto</p> <pre><code>pip install -r ./ms1/requirements.txt\npip install -r ./ms2/requirements.txt\n</code></pre> <p>Recuerda tener creada tu instancia de base de datos local con postgres usando los siguientes parametros user: <code>nrivera</code> password: <code>password</code> db: <code>REPORTS</code> host: <code>localhost</code> port: <code>5432</code></p> <p>Vamos aplicar las migraciones con el orm de django para generar las tablas desde ms1.</p> <pre><code>cd ms1/\npython manage.py makemigrations\npython manage.py migrate\n</code></pre> <p>Recuerda definir las variables de entorno en tu terminal</p> Windows (PowerShell)Mac &amp; Linux <pre><code>$Env:NAME = \"REPORTS\"\n$Env:USER = \"nrivera\"\n$Env:PASSWORD = \"password\"\n$Env:HOST = \"localhost\"\n$Env:PORT = \"5432\"\n$Env:MS1 = \"http://127.0.0.1:7000/\"\n</code></pre> <pre><code>export NAME = \"REPORTS\"\nexport USER = \"nrviera\"\nexport PASSWORD = \"password\"\nexport HOST = \"localhost\"\nexport PORT = \"5432\"\nexport MS1 = \"http://127.0.0.1:7000/\"\n</code></pre> <p>Ahora vamos a levantar ms1,</p> <pre><code>cd ms1/\npython manage.py runserver 7000\n</code></pre> <p>Para levantar ms2</p> <pre><code>cd ms2/\nsanic server\n</code></pre> <p>cuando quieras salir derl entorno virtual solo escribe en la consola</p> <pre><code>deactivate\n</code></pre>"},{"location":"#deploy-con-docker","title":"Deploy con docker","text":"<p>Vamos a detener y eliminar los contenedores, redes y volumenes relacionados al docker-compose.yml</p> MacWindows &amp; Linux <pre><code>docker-compose down -v\n</code></pre> <pre><code>docker compose down -v\n</code></pre> <p>Ahora vamos a construir los contenedores y forzamos a construirlo desde 0</p> MacWindows &amp; Linux <pre><code>docker-compose build --no-cache\n</code></pre> <pre><code>docker compose build --no-cache\n</code></pre> <p>Ahora levantamos los contenedores en modo demonizado</p> MacWindows &amp; Linux <pre><code>docker-compose up -d\n</code></pre> <pre><code>docker compose up -d\n</code></pre> <p>Aplicamos las migraciones a la base de datos</p> MacWindows &amp; Linux <pre><code>docker-compose run ms1 python manage.py makemigrations\ndocker-compose run ms1 python manage.py migrate\n</code></pre> <pre><code>docker compose run ms1 python manage.py makemigrations\ndocker compose run ms1 python manage.py migrate\n</code></pre>"},{"location":"#endpoints","title":"Endpoints","text":"<p>puedes ver los endpoint desarrollados <code>aqui</code> (solo visible para cuentas scmlatam)</p>"},{"location":"#ejecucion-de-un-reporte","title":"Ejecuci\u00f3n de un reporte.","text":"<p>Vamos a crear un reporte</p> <p>Asegurate de tener activado el enviroment <code>challenge</code> en postman</p> <p>Ejecuta el endpoint <code>Create persons</code>, este enpoint se encargar\u00e1 de crear la mockdata de 10 personas en la base de datos, si quieres otra cantidad de elementos puedes cambiar el valor de amount en el body de la petici\u00f3n.</p> <p>Luego ejecuta el endpoint <code>Create punches</code>, este endpoint crear\u00e1 las marcas de entrada y salida de los \u00faltimos 7 d\u00edas para cada persona.</p> <p>Para crear un reporte ejecuta el endpoint <code>Create report</code>, este endpoint empezar\u00e1 a crear el reporte para la persona con person_id 8, si deseas cambiar a la persona cambia el valor de person_id en el body, puedes visualizar los datos de las personas con el endpoint <code>Get persons</code>.</p> <p>Para saber el estado de la ejecuci\u00f3n del reporte puedes ejecutar el endpoint <code>Checking report status</code> y enviarle el por query_params el id del reporte.</p> <p>Finalmente para visualizar el archivo del reporte puedes ejecutar el endpoint <code>Get report file</code>, la url del endpoint tiene la siguiente estructura <code>{{domain}}/static/reports/{{filename}}</code>, el filename te llegar\u00e1 en el response de <code>Create report</code>.</p>"},{"location":"#orden-de-pasos","title":"Orden de pasos","text":"<ul> <li>Create persons</li> <li>Create punches</li> <li>Get persons</li> <li>Create report</li> <li>Checking report status</li> <li>Get report file</li> </ul>"}]}